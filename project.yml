# https://spacy.io/usage/training
# https://spacy.io/usage/training#config
# https://explosion.ai/blog/spacy-v3-project-config-systems#spacy-config-system
# https://stackoverflow.com/questions/72904855/no-pos-tags-in-newly-trained-spacy-ner-model-how-to-enable

title: ""
description: ""

vars:
  name: "ner_demo"
  lang: "en"
  version: "0.0.1"
  # Set your GPU ID, -1 is CPU
  gpu_id: -1
  # Vectors model for train-with-vectors
  vectors_model: "en_core_web_trf"
  file:
    train: 
      json: "data/assets/train_numeric.json"
      spacy: "data/corpus/train_numeric.spacy"
    test: 
      json: "data/assets/test_numeric.json"
      spacy: "data/corpus/test_numeric.spacy"


directories: ["data/assets", "data/corpus", "configs", "training", "scripts"]

assets:
  - dest: "${vars.file.train.json}"
  - dest: "${vars.file.test.json}"

workflows:
  all:
    - convert
    - init-config
    - train-trf
    - evaluate

commands:
  - name: "download"
    help: "Download a spaCy model with pretrained vectors"
    script:
      - "python -m spacy download ${vars.vectors_model}"

  - name: "convert"
    help: "Convert the data to spaCy's binary format"
    script:
      # FIXME: Create scripts dir 
      - python configs/ner_demo/scripts/convert.py ${vars.lang} ${vars.file.test.json} ${vars.file.test.spacy}
      - python configs/ner_demo/scripts/convert.py ${vars.lang} ${vars.file.train.json} ${vars.file.train.spacy}
      # - "python -m spacy convert ${vars.file.train.json} data/corpus"
      # - "python -m spacy convert ${vars.file.test.json} data/corpus"
    deps:
      - "${vars.file.train.json}"
      - "${vars.file.test.json}"
    outputs:
      - "${vars.file.train.spacy}"
      - "${vars.file.test.spacy}"

  - name: "init-config"
    help: "Fill config defaults"
    script:
      - "python -m spacy init fill-config configs/base_config.cfg configs/config.cfg"      

  - name: "train"
    help: "Train the NER model"
    script:
      - "python -m spacy train configs/config.cfg --output training/ --paths.train ${vars.file.train.spacy} --paths.dev ${vars.file.test.spacy} --gpu-id ${vars.gpu_id}"
    deps:
      - "configs/config.cfg"
      - "${vars.file.train.spacy}"
      - "${vars.file.test.spacy}"
    outputs:
      - "training/model-best"

  - name: "train-trf"
    help: "Train the NER model with vectors"
    script:
      - "python -m spacy train configs/config.cfg --output training/ --paths.train ${vars.file.train.spacy} --paths.dev ${vars.file.test.spacy} --gpu-id ${vars.gpu_id} --initialize.vectors ${vars.vectors_model}"
    deps:
      - "configs/config.cfg"
      - "${vars.file.train.spacy}"
      - "${vars.file.test.spacy}"
    outputs:
      - "training/model-best"

  - name: "evaluate"
    help: "Evaluate the model and export metrics"
    script:
      - "python -m spacy evaluate training/model-best corpus/dev.spacy --output training/metrics.json"
    deps:
      - "corpus/dev.spacy"
      - "training/model-best"
    outputs:
      - "training/metrics.json"

  - name: package
    help: "Package the trained model as a pip package"
    script:
      - "python -m spacy package training/model-best packages --name ${vars.name} --version ${vars.version} --force"
    deps:
      - "training/model-best"
    outputs_no_cache:
      - "packages/${vars.lang}_${vars.name}-${vars.version}/dist/${vars.lang}_${vars.name}-${vars.version}.tar.gz"

  - name: visualize-model
    help: Visualize the model's output interactively using Streamlit
    script:
      - "streamlit run scripts/visualize_model.py training/model-best \"I saw Shaka Khan in London.\""
    deps:
      - "scripts/visualize_model.py"
      - "training/model-best"
